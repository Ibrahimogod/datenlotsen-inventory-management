# This workflow builds the WPF app and publishes a GitHub release with the published output (no MSI installer)
name: Build and Release WPF App

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release tag (e.g., v1.0.0)'
        required: false
        type: string
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: windows-latest
    outputs:
      artifact-name: ${{ steps.set_artifact_name.outputs.name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore Datenlotsen.WPF/Datenlotsen.WPF.csproj

      - name: Publish WPF app
        run: dotnet publish Datenlotsen.WPF/Datenlotsen.WPF.csproj -c Release -f net8.0-windows -o publish

      - name: List publish directory (debug)
        run: |
          echo "Contents of publish directory:"
          dir publish

      - name: Set artifact name
        id: set_artifact_name
        run: echo "name=Datenlotsen" >> $GITHUB_OUTPUT

      - name: Upload published app artifact
        uses: actions/upload-artifact@v4
        with:
          name: Datenlotsen
          path: publish/**

  release:
    runs-on: windows-latest
    needs: build
    steps:
      - name: Download published app artifact
        uses: actions/download-artifact@v4
        with:
          name: Datenlotsen
          path: ./release

      - name: List release directory (debug)
        run: |
          echo "Contents of release directory:"
          dir ./release

      - name: Set Release Tag
        id: set_tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            if [ -z "${{ github.event.inputs.tag_name }}" ]; then
              echo "::error::You must provide a tag_name when running manually."
              exit 1
            fi
            echo "tag=${{ github.event.inputs.tag_name }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./release/**
          tag_name: ${{ steps.set_tag.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}